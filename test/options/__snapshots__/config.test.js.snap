// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`"config" option should throw an error on the invalid config: errors 1`] = `
Array [
  "ModuleBuildError: Module build failed (from \`replaced original path\`):
Error: invalid postcss config",
]
`;

exports[`"config" option should throw an error on the invalid config: warnings 1`] = `Array []`;

exports[`"config" option should throw an error on the unresolved config: errors 1`] = `
Array [
  "ModuleBuildError: Module build failed (from \`replaced original path\`):
Error: No PostCSS Config found in: /test/fixtures/config-scope/css/unresolve.js",
]
`;

exports[`"config" option should throw an error on the unresolved config: warnings 1`] = `Array []`;

exports[`"config" option should work "string" value (relative path): css 1`] = `
"a { color: rgba(0, 0, 0, 1.0) }

.foo {
  float: right;
}
"
`;

exports[`"config" option should work "string" value (relative path): errors 1`] = `Array []`;

exports[`"config" option should work "string" value (relative path): warnings 1`] = `Array []`;

exports[`"config" option should work Config - Context - {Object}: css 1`] = `
"a { color: rgba(0, 0, 0, 1.0) }

.foo {
  float: right;
}
"
`;

exports[`"config" option should work Config - Context - {Object}: errors 1`] = `Array []`;

exports[`"config" option should work Config - Context - {Object}: warnings 1`] = `Array []`;

exports[`"config" option should work Config - Path - {String}: css 1`] = `
"a { color: black }

.foo {
  float: right;
}
"
`;

exports[`"config" option should work Config - Path - {String}: errors 1`] = `Array []`;

exports[`"config" option should work Config - Path - {String}: warnings 1`] = `Array []`;

exports[`"config" option should work Config – Context – Loader {Object}: errors 1`] = `Array []`;

exports[`"config" option should work Config – Context – Loader {Object}: warnings 1`] = `Array []`;

exports[`"config" option should work with "Object" value: css 1`] = `
"a { color: rgba(0, 0, 0, 1.0) }

.foo {
  float: right;
}
"
`;

exports[`"config" option should work with "Object" value: errors 1`] = `Array []`;

exports[`"config" option should work with "Object" value: warnings 1`] = `Array []`;

exports[`"config" option should work with "false" value: css 1`] = `
"a { color: black }

.foo {
  float: right;
}
"
`;

exports[`"config" option should work with "false" value: errors 1`] = `Array []`;

exports[`"config" option should work with "false" value: warnings 1`] = `Array []`;

exports[`"config" option should work with "package.json": css 1`] = `
".import {
  color: red;
}

.test {
  color: blue;
}
"
`;

exports[`"config" option should work with "package.json": errors 1`] = `Array []`;

exports[`"config" option should work with "package.json": warnings 1`] = `Array []`;

exports[`"config" option should work with "postcss.config.js" and the array syntax of the "plugin" option: css 1`] = `
".import {
  color: red;
}

.test {
  color: cyan;
}
"
`;

exports[`"config" option should work with "postcss.config.js" and the array syntax of the "plugin" option: errors 1`] = `Array []`;

exports[`"config" option should work with "postcss.config.js" and the array syntax of the "plugin" option: warnings 1`] = `Array []`;

exports[`"config" option should work with "postcss.config.js" and the object syntax of the "plugin" option: css 1`] = `
".import {
  color: red;
}

.test {
  color: blue;
}
"
`;

exports[`"config" option should work with "postcss.config.js" and the object syntax of the "plugin" option: errors 1`] = `Array []`;

exports[`"config" option should work with "postcss.config.js" and the object syntax of the "plugin" option: warnings 1`] = `Array []`;

exports[`"config" option should work with "string" value (absolute path): css 1`] = `
"a { color: rgba(0, 0, 0, 1.0) }

.foo {
  float: right;
}
"
`;

exports[`"config" option should work with "string" value (absolute path): errors 1`] = `Array []`;

exports[`"config" option should work with "string" value (absolute path): warnings 1`] = `Array []`;

exports[`"config" option should work with "string" value (path to directory with the configuration): css 1`] = `
"a { color: rgba(0, 0, 0, 1.0) }

.foo {
  float: right;
}
"
`;

exports[`"config" option should work with "string" value (path to directory with the configuration): errors 1`] = `Array []`;

exports[`"config" option should work with "string" value (path to directory with the configuration): warnings 1`] = `Array []`;

exports[`"config" option should work with "string" value and respect all options: css 1`] = `
"a {
  color: black
}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLnNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFO0FBREYiLCJmaWxlIjoic3R5bGUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYVxuICBjb2xvcjogYmxhY2tcbiJdfQ== */"
`;

exports[`"config" option should work with "string" value and respect all options: errors 1`] = `Array []`;

exports[`"config" option should work with "string" value and respect all options: warnings 1`] = `Array []`;

exports[`"config" option should work with "true" value: css 1`] = `
"a { color: rgba(0, 0, 0, 1.0) }

.foo {
  float: right;
}
"
`;

exports[`"config" option should work with "true" value: errors 1`] = `Array []`;

exports[`"config" option should work with "true" value: warnings 1`] = `Array []`;

exports[`"config" option should work with the "postcssOptions" option: css 1`] = `
"a { color: rgba(0, 0, 0, 1.0) }

[dir=ltr] .foo { float: right;
}

[dir=rtl] .foo {
  float: left;
}
"
`;

exports[`"config" option should work with the "postcssOptions" option: errors 1`] = `Array []`;

exports[`"config" option should work with the "postcssOptions" option: warnings 1`] = `Array []`;

exports[`"config" option should work without the specified value: css 1`] = `
"a { color: rgba(0, 0, 0, 1.0) }

.foo {
  float: right;
}
"
`;

exports[`"config" option should work without the specified value: errors 1`] = `Array []`;

exports[`"config" option should work without the specified value: warnings 1`] = `Array []`;
