// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`"config" option should throw an error on the invalid config : errors 1`] = `
Array [
  "ModuleBuildError: Module build failed (from \`replaced original path\`):
Error: invalid postcss config",
]
`;

exports[`"config" option should throw an error on the invalid config : warnings 1`] = `Array []`;

exports[`"config" option should throw an error when unresolved config : errors 1`] = `
Array [
  "ModuleBuildError: Module build failed (from \`replaced original path\`):
Error: No PostCSS Config found in: /test/fixtures/config-scope/css/unresolve.js",
]
`;

exports[`"config" option should throw an error when unresolved config : warnings 1`] = `Array []`;

exports[`"config" option should work Config - "string" with path directory: css 1`] = `
"a { color: rgba(0, 0, 0, 1.0) }

.foo {
  float: right;
}
"
`;

exports[`"config" option should work Config - "string" with path directory: errors 1`] = `Array []`;

exports[`"config" option should work Config - "string" with path directory: warnings 1`] = `Array []`;

exports[`"config" option should work Config - "string" with relative path: css 1`] = `
"a { color: rgba(0, 0, 0, 1.0) }

.foo {
  float: right;
}
"
`;

exports[`"config" option should work Config - "string" with relative path: errors 1`] = `Array []`;

exports[`"config" option should work Config - "string" with relative path: warnings 1`] = `Array []`;

exports[`"config" option should work Config - "string": css 1`] = `
"a { color: rgba(0, 0, 0, 1.0) }

.foo {
  float: right;
}
"
`;

exports[`"config" option should work Config - "string": errors 1`] = `Array []`;

exports[`"config" option should work Config - "string": warnings 1`] = `Array []`;

exports[`"config" option should work Config - {Object}: css 1`] = `
"a { color: rgba(0, 0, 0, 1.0) }

.foo {
  float: right;
}
"
`;

exports[`"config" option should work Config - {Object}: errors 1`] = `Array []`;

exports[`"config" option should work Config - {Object}: warnings 1`] = `Array []`;

exports[`"config" option should work Config - Context - {Object}: css 1`] = `
"a { color: rgba(0, 0, 0, 1.0) }

.foo {
  float: right;
}
"
`;

exports[`"config" option should work Config - Context - {Object}: errors 1`] = `Array []`;

exports[`"config" option should work Config - Context - {Object}: warnings 1`] = `Array []`;

exports[`"config" option should work Config - Object - path file: css 1`] = `
"a { color: rgba(0, 0, 0, 1.0) }

.foo {
  float: right;
}
"
`;

exports[`"config" option should work Config - Object - path file: errors 1`] = `Array []`;

exports[`"config" option should work Config - Object - path file: warnings 1`] = `Array []`;

exports[`"config" option should work Config - Path - {String}: css 1`] = `
"a { color: black }

.foo {
  float: right;
}
"
`;

exports[`"config" option should work Config - Path - {String}: errors 1`] = `Array []`;

exports[`"config" option should work Config - Path - {String}: warnings 1`] = `Array []`;

exports[`"config" option should work Config - false: css 1`] = `
"a { color: black }

.foo {
  float: right;
}
"
`;

exports[`"config" option should work Config - false: errors 1`] = `Array []`;

exports[`"config" option should work Config - false: warnings 1`] = `Array []`;

exports[`"config" option should work Config - true: css 1`] = `
"a { color: rgba(0, 0, 0, 1.0) }

.foo {
  float: right;
}
"
`;

exports[`"config" option should work Config - true: errors 1`] = `Array []`;

exports[`"config" option should work Config - true: warnings 1`] = `Array []`;

exports[`"config" option should work Config – Context – Loader {Object}: errors 1`] = `Array []`;

exports[`"config" option should work Config – Context – Loader {Object}: warnings 1`] = `Array []`;

exports[`"config" option should work if the "config" options is not specified: css 1`] = `
"a {
  color: black;
}

a {
  color: red;
}

a {
  color: green;
}

a {
  color: blue;
}

.class {
  -x-border-color: blue blue *;
  -x-color: * #fafafa;
}

.class-foo {
  -z-border-color: blue blue *;
  -z-color: * #fafafa;
}

.phone {
  &_title {
    width: 500px;

    @media (max-width: 500px) {
      width: auto;
    }

    body.is_dark & {
      color: white;
    }
  }

  img {
    display: block;
  }
}
"
`;

exports[`"config" option should work if the "config" options is not specified: errors 1`] = `Array []`;

exports[`"config" option should work if the "config" options is not specified: warnings 1`] = `Array []`;

exports[`"config" option should work package.json - {Object} - Process CSS: css 1`] = `
".import {
  color: red;
}

.test {
  color: blue;
}
"
`;

exports[`"config" option should work package.json - {Object} - Process CSS: errors 1`] = `Array []`;

exports[`"config" option should work package.json - {Object} - Process CSS: warnings 1`] = `Array []`;

exports[`"config" option should work postcss.config.js - {Array} - Process CSS: css 1`] = `
".import {
  color: red;
}

.test {
  color: cyan;
}
"
`;

exports[`"config" option should work postcss.config.js - {Array} - Process CSS: errors 1`] = `Array []`;

exports[`"config" option should work postcss.config.js - {Array} - Process CSS: warnings 1`] = `Array []`;

exports[`"config" option should work postcss.config.js - {Object} - Process CSS: css 1`] = `
".import {
  color: red;
}

.test {
  color: blue;
}
"
`;

exports[`"config" option should work postcss.config.js - {Object} - Process CSS: errors 1`] = `Array []`;

exports[`"config" option should work postcss.config.js - {Object} - Process CSS: warnings 1`] = `Array []`;

exports[`"config" option should work with the "postcssOptions" option: css 1`] = `
"a { color: rgba(0, 0, 0, 1.0) }

[dir=ltr] .foo { float: right;
}

[dir=rtl] .foo {
  float: left;
}
"
`;

exports[`"config" option should work with the "postcssOptions" option: errors 1`] = `Array []`;

exports[`"config" option should work with the "postcssOptions" option: warnings 1`] = `Array []`;
